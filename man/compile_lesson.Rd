% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/compile_lesson.R
\name{compile_lesson}
\alias{compile_lesson}
\title{compile_lesson}
\usage{
compile_lesson(
  choices,
  current_data,
  destFolder,
  outputFileName = "LESSON.json",
  WD = getwd(),
  clean = TRUE,
  rebuild = NULL
)
}
\arguments{
\item{choices}{one or more of the following: c("Front Matter","Standards Alignment","Teaching Materials","Procedure","Acknowledgements","Versions"); or "All". If missing, will compile things in the ReadyToCompile entry in front-matter.yml for the WD folder.}

\item{current_data}{the reconciled data including yaml and input from the shiny app environment; if current_data=NULL, read in front-matter.yml}

\item{destFolder}{where you want to save the folder; by default in the "meta/JSON/" folder}

\item{outputFileName}{output file name; default= "processedProcedure.json"}

\item{WD}{is working directory of the project (useful to supply for shiny app, which has diff. working environment)}

\item{clean}{delete all JSON files in meta/ and start over? default=TRUE}

\item{rebuild}{if T, rebuild everything; overrides RebuildAllMaterials in front-matter.yml; default= NULL}
}
\value{
current_data; also the lesson JSON is saved to \code{meta/JSON/LESSON.json}
}
\description{
Compiles selected sections of a lesson (or "all"). Results in a LESSON.JSON, but files are not staged for publishing. Need to follow with a call to \code{\link[=stage_assets]{stage_assets()}} and \code{\link[=publish]{publish()}} to publish these changes to the web.
}
\details{
Combines functionality of:
\itemize{
\item \code{\link[=compileProcedure]{compileProcedure()}}
\item \code{\link[=compile_standards]{compile_standards()}}
\item \code{\link[=learningChart]{learningChart()}} and \code{\link[=learningEpaulette]{learningEpaulette()}}
\item \code{\link[=compileAcknowledgements]{compileAcknowledgements()}}
\item \code{\link[=compileVersions]{compileVersions()}}
\item \code{\link[=compileJSON]{compileJSON()}}
}

Intended for a single lesson in the current RStudio project. Use \code{\link[=batch_rebuild]{batch_rebuild()}} to compile and rebuild more than one lesson (or a single lesson outside the current project).
}
