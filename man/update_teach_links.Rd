% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update_teach_links.R
\name{update_teach_links}
\alias{update_teach_links}
\title{update_teach_links}
\usage{
update_teach_links(
  WD = getwd(),
  rename_parts = TRUE,
  prompt_rename = TRUE,
  rebuild = NULL,
  rm_missing = TRUE,
  clean = FALSE,
  ignore = ".txt$"
)
}
\arguments{
\item{WD}{a local virtualized path to a lesson folder where Google Drive (Web) path will be extracted from front matter. Easiest is to pass "?" which will invoke \code{\link[=pick_lesson]{pick_lesson()}}}

\item{rename_parts}{logical; do you want to rename part folders based on PartTitles tab? default= T takes about 2sec to check if nothing needs changing; uses helper function \code{\link[=zrename_parts]{zrename_parts()}}}

\item{prompt_rename}{logical, do you want to promput user about whether to rename parts? default=T}

\item{rebuild}{if T, rebuild everything; overrides checks of last modified times before updating links and teach-it.gsheet; default= NULL}

\item{rm_missing}{logical; do you want to automatically remove records that are missing (and for which no link was found during crawl of Google Drive folder?); default= TRUE; if FALSE, the link will be left blank}

\item{clean}{logical; do you want to ignore all info on the teach-it.gsheet and only import inferred info from crawled google drive project files? THIS WILL OVERWRITE MANUALLY ENTERED TITLES; default=FALSE}

\item{ignore}{regex expression to remove certain filetypes (e.g. txt files); default= ".txt$"}
}
\description{
Updates links to teaching materials and also renames Part Folders.
How?: Searches lesson's google drive folder to populate the 'TeachMatLinks' tab of the lesson's \code{meta/teach-it_*.gsheet} file.
Merges these detected file names and links with manually added "extLink" links to learning resources hosted elsewhere.
90\% of this algorithm uses drive_* functions, so it's rather slow. It does save a state of files (see step 7 in details)
using the virtualized path, though. This is used to skip updating if all files are up to date.
}
\details{
It's a hybrid lookup system that requires Google Drive for Desktop to be setup with permission to
GP-Studio shared drive and a web connection. Steps:
\enumerate{
\item Find WD working directory corresponding to the chosen lesson
\item Access the cloud version of the project folder by finding the 'GdriveDirID' in meta/front-matter.yml.
\item Search through web folders, compiling information from folder and naming structure in 'teaching-materials' folder.
\item Get Gdrive links for downloads, classroom- and remote- lessons, and assessments.
\item Merge results with manually entered titles and such in 'meta/teach-it.gsheet TeachMatLinks tab'
\item Save 'meta/teach-it.gsheet'
\item **Renames folders based on info in the PartTitles tab
\item Save teach-it_state.RDS that stores info about the teaching-materials folder at the time of the last update. \code{\link[=compile_lesson]{compile_lesson()}} uses \code{\link[=get_state]{get_state()}} to check if the current state is identical to the state at the time of the last update to skip this update_teach_links call.
}
}
\seealso{
Other Google Drive Functions: 
\code{\link{drive_contents}()},
\code{\link{drive_copy_missing_files}()},
\code{\link{drive_cp_dir}()},
\code{\link{drive_find_path}()},
\code{\link{drive_get_info}()},
\code{\link{drive_inSync}()},
\code{\link{drive_new_from_template}()},
\code{\link{drive_open}()},
\code{\link{init_lesson_meta}()}
}
\concept{Google Drive Functions}
