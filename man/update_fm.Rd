% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/update_fm.R
\name{update_fm}
\alias{update_fm}
\title{update_fm (Update Front Matter)}
\usage{
update_fm(
  WD = "?",
  WD_git = NULL,
  change_this = NULL,
  save_output = TRUE,
  return_fm = FALSE,
  reorder = TRUE,
  drive_reconnect = FALSE,
  try_harder = FALSE,
  recompile = TRUE,
  backup = TRUE,
  force_upgrade = FALSE
)
}
\arguments{
\item{WD}{working directory; default=getwd(); if "?" supplied, will invoke \code{\link[=pick_lesson]{pick_lesson()}}. The basename of this working directory will then be used to find a match in the gp-lessons git project folder by calling \code{\link[=get_wd_git]{get_wd_git()}}. It's a little roundabout, but is consistent with lookups centering on the Google Drive project working directory.}

\item{WD_git}{default=NULL. If you already know the path to the gp-lessons folder, this is more efficient.}

\item{change_this}{A list of values to change in the front matter. Default=NULL. Example: list(RebuildAllMaterials=TRUE,Language="Italian) will trigger a full lesson rebuild when \code{\link[=compile_unit]{compile_unit()}} is run and change the Language and locale.}

\item{save_output}{do you want to save the updated front-matter to WD/meta/front-matter.yml? Default=TRUE}

\item{return_fm}{logical; if TRUE, returns the the updated front-matter; if FALSE (default), returns TRUE/FALSE of success}

\item{reorder}{do you want to reorder the resulting list, based on template order? default=TRUE}

\item{drive_reconnect}{logical; do you want to re-look-up all \verb{Gdrive*} keys? (might be useful if old files have been replaced instead of updated and \verb{Gdrive*} keys point to a trashed file); default=FALSE}

\item{try_harder}{passed to \code{\link[=catch_err]{catch_err()}} specifically when we look for GdriveDir, just in case the Google Drive for Desktop and Web are out of sync, it'll try after a series of intervals. Default= FALSE.}

\item{recompile}{logical; if TRUE (default), runs \code{\link[=compile_fm]{compile_fm()}} and \code{\link[=compile_json]{compile_json()}}}

\item{backup}{logical; do you want to back up front-matter.yml before updating it with new URLs? passed to \code{\link[=fm_backup]{fm_backup()}} default=TRUE}

\item{force_upgrade}{logical; used to bypass checks for a custom change to the front-matter template version. If TRUE, will run a temporary section of code with |force_upgrade logic; Default=FALSE.}
}
\value{
returns logical of success
}
\description{
Checks for new galacticPubs front-matter_TEMPLATE.yml. If found, it will add new fields,  return the updated object, and write to drive (meta/front-matter.yml) if requested.
}
\details{
If meta/front-matter.yml not found, it is created from the template. Will also combine language and country info to create locale, and add GPCatalogURL if those fields are blank. Attempts to find the lesson on Google Drive in GP-Studio and add GdriveDirID if missing.
}
